// Vad, hur, varför.

import java.util.Scanner;

public class KryptoClass {
    static int[][] array1 = {
  { 0, 5, 0, 4, 0, 2, 0, 6, 0 },
  { 0, 7, 4, 0, 8, 0, 9, 1, 0 },
  { 9, 6, 0, 0, 0, 0, 0, 5, 4 },
  { 0, 0, 0, 2, 1, 6, 0, 0, 0 },
  { 2, 0, 3, 0, 0, 9, 6, 0, 0 },
  { 0, 1, 0, 3, 5, 7, 0, 0, 8 },
  { 3, 4, 0, 0, 8, 0, 0, 7, 5 },
  { 0, 2, 6, 0, 1, 0, 1, 3, 0 },
  { 0, 9, 0, 7, 0, 1, 0, 4, 0 }
} ;
    
    // De här siffrorna kan du välja mellan och sedan sätta en bokstav för. Siffran kommer stanna kvar när du bestämmar att exempel 1 ska vara K. Då så blir resultatet 1K. Jag valde att göra på detta sätt för att visa att 1 är K,
    
    
    static int sizeX = 9;
    static int sizeY = 9;
    static char[][] array2 = new char [sizeY][sizeX];
    public static void main(String[] args) {
        for(int i=0;i<sizeX;i++){
            for(int j=0;j<sizeY;j++){
                System.out.print(array1[i][j]);
                System.out.print(" ");
            }
        System.out.println(" ");
        }

        int n=0;
        while(n != -1){
        Scanner reader = new Scanner(System.in);
        System.out.print("\n Nummer: ");
        n = reader.nextInt(); 
        System.out.print("\n Bokstav: ");
        char c = reader.next(".").charAt(0);
        

        for(int i=0;i<sizeX;i++){
            for(int j=0;j<sizeY;j++){
                if(n==array1[i][j]){
                	array2[i][j] = c;
                }
            }
        }
        
        for(int i=0;i<sizeX;i++){
            for(int j=0;j<sizeY;j++){
                System.out.print(" "+ array1[i][j] + array2[i][j]);
            }
        System.out.println("");
        }
        }

    }
    
    package cjhs;

    import java.awt.Color;
    import java.awt.Dimension;
    import java.awt.Font;
    import java.awt.GridLayout;
    import java.awt.event.ActionEvent;
    import java.awt.event.ActionListener;


    import javax.swing.BorderFactory;
    import javax.swing.BoxLayout;
    import javax.swing.JButton;
    import javax.swing.JFrame;
    import javax.swing.JPanel;
    import javax.swing.JTextField;
    import javax.swing.SwingConstants;


    public class Framen extends JFrame {
    	private static final long serialVersionUID = -3345354391577272355L;


    	public Framen(int rowsi, int cols) {
    		
    		int GRID_ROWS = rowsi;
    		int GRID_COL = cols;
    		int BOX_SIZE = 50;

    		Font DESU_FONT = new Font("Monospaced", Font.BOLD, 20);
    		Color DESU_COLOR = Color.PINK;
    		
    		int DESU_WIDTH = BOX_SIZE * GRID_ROWS;
    		int DESU_HEIGHT = BOX_SIZE * GRID_COL;

    		JTextField[][] jt = new JTextField[GRID_ROWS][GRID_COL];


    		// Text-boxes & Button second panel
    		JTextField DESU_IN = new JTextField();
    		JTextField DESU_OUT = new JTextField();
    		JButton DESU_BTN = new JButton("BTN");


    		// content panel that holds everything
    		JPanel content = new JPanel();


    		// Game panel and switch panel
    		JPanel p = new JPanel();
    		JPanel p2 = new JPanel();


    		// Adds panels to the content panel
    		content.add(p);
    		content.add(p2);


    		// Layout that holds a panel above another
    		BoxLayout layout = new BoxLayout(content, BoxLayout.Y_AXIS);
    		content.setLayout(layout);


    		add(content);
    		p.setLayout(new GridLayout(GRID_ROWS, GRID_COL));


    		for (int row = 0; row < GRID_ROWS; row++) {
    			for (int col = 0; col < GRID_COL; col++) {
    				jt[row][col] = new JTextField();
    				p.add(jt[row][col]);
    				jt[row][col].setFont(DESU_FONT);
    				jt[row][col].setHorizontalAlignment(SwingConstants.CENTER);
    				jt[row][col].setBorder(BorderFactory.createMatteBorder(3, 3, 3, 3, DESU_COLOR));
    			}
    		}


    		DESU_BTN.addActionListener(new ActionListener() {


    			@Override
    			public void actionPerformed(ActionEvent e) {
    				for (int row = 0; row < GRID_ROWS; row++) {
    					for (int col = 0; col < GRID_COL; col++) {
    						
    						if(jt[row][col].getText().equalsIgnoreCase(DESU_IN.getText().toUpperCase())){
    							jt[row][col].setText(DESU_OUT.getText().toUpperCase());
    						}
    					}
    				}


    			}
    		});


    		// Adding boxes in second panel
    		p2.add(DESU_IN);
    		p2.add(DESU_OUT);
    		p2.add(DESU_BTN);


    		// Text-boxes second panel Settings


    		DESU_IN.setPreferredSize(new Dimension(50, 20));
    		DESU_OUT.setPreferredSize(new Dimension(50, 20));


    		p.setPreferredSize(new Dimension(DESU_WIDTH, DESU_HEIGHT));
    		p2.setPreferredSize(new Dimension(DESU_WIDTH, BOX_SIZE));
    		pack();
    		setLocationRelativeTo(null);
    		setTitle("sdas");
    		setDefaultCloseOperation(3);


    		setVisible(true);


    	}


    }
}